/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VoteCollectModule,
  VoteCollectModuleInterface,
} from "../VoteCollectModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FollowInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializePublicationCollectModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "referrerProfileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processCollect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161095838038061095883398101604081905261002f916100a0565b806001600160a01b038116610057576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a250506100d0565b6000602082840312156100b257600080fd5b81516001600160a01b03811681146100c957600080fd5b9392505050565b60805161084c61010c60003960008181604b0152818160cc01528181610189015281816102ed0152818161040b0152610519015261084c6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a4c52b8614610046578063c233f9511461008a578063e49c3dda146100aa575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009d61009836600461061f565b6100bf565b6040516100819190610672565b6100bd6100b83660046106df565b61017e565b005b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461010a576040516313bd2e8360e31b815260040160405180910390fd5b600061011883850185610752565b600087815260208181526040808320898452825280832084815560018101849055600201929092558151601f8701829004820281018201909252858252919250908590859081908401838280828437600092019190915250929998505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101c7576040516313bd2e8360e31b815260040160405180910390fd5b6101d184866102d4565b60006101df82840184610779565b9050801561025d57600085815260208181526040808320878452909152902060019081015461020d9161079d565b600086815260208181526040808320888452909152902060018101829055541015610258576000858152602081815260408083208784529091529020600301805460ff191660011790555b6102cb565b60008581526020818152604080832087845290915290206002015461028390600161079d565b6000868152602081815260408083208884529091529020600281018290555410156102cb576000858152602081815260408083208784529091529020600301805460ff191690555b50505050505050565b604051633648f48360e21b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d923d20c90602401602060405180830381865afa15801561033c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036091906107c3565b905060006001600160a01b038216156103f2576040516311470f4360e21b8152600481018590526001600160a01b0384811660248301526000604483015283169063451c3d0c90606401602060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb91906107e0565b9050610504565b60405163a9ec656360e01b8152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9ec656390602401602060405180830381865afa15801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e91906107c3565b90506001600160a01b0381161580159061050057506040516370a0823160e01b81526001600160a01b0385811660048301528216906370a0823190602401602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd91906107fd565b15155b9150505b801580156105b25750826001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e866040518263ffffffff1660e01b815260040161056591815260200190565b602060405180830381865afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a691906107c3565b6001600160a01b031614155b156105d057604051636992d36b60e11b815260040160405180910390fd5b50505050565b60008083601f8401126105e857600080fd5b50813567ffffffffffffffff81111561060057600080fd5b60208301915083602082850101111561061857600080fd5b9250929050565b6000806000806060858703121561063557600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561065a57600080fd5b610666878288016105d6565b95989497509550505050565b600060208083528351808285015260005b8181101561069f57858101830151858201604001528201610683565b818111156106b1576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b03811681146106dc57600080fd5b50565b60008060008060008060a087890312156106f857600080fd5b86359550602087013561070a816106c7565b94506040870135935060608701359250608087013567ffffffffffffffff81111561073457600080fd5b61074089828a016105d6565b979a9699509497509295939492505050565b60006020828403121561076457600080fd5b5035919050565b80151581146106dc57600080fd5b60006020828403121561078b57600080fd5b81356107968161076b565b9392505050565b600082198211156107be57634e487b7160e01b600052601160045260246000fd5b500190565b6000602082840312156107d557600080fd5b8151610796816106c7565b6000602082840312156107f257600080fd5b81516107968161076b565b60006020828403121561080f57600080fd5b505191905056fea2646970667358221220f46cf4cf5b342222f7f86e66ef8d1f76ac40465d95eff300a1ac051da5c8fff464736f6c634300080a0033";

type VoteCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoteCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VoteCollectModule__factory extends ContractFactory {
  constructor(...args: VoteCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VoteCollectModule> {
    return super.deploy(hub, overrides || {}) as Promise<VoteCollectModule>;
  }
  getDeployTransaction(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, overrides || {});
  }
  attach(address: string): VoteCollectModule {
    return super.attach(address) as VoteCollectModule;
  }
  connect(signer: Signer): VoteCollectModule__factory {
    return super.connect(signer) as VoteCollectModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoteCollectModuleInterface {
    return new utils.Interface(_abi) as VoteCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VoteCollectModule {
    return new Contract(address, _abi, signerOrProvider) as VoteCollectModule;
  }
}
